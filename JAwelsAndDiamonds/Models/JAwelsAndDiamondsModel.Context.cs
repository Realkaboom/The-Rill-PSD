//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JAwelsAndDiamonds.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JAwelsAndDiamondsEntities : DbContext
    {
        public JAwelsAndDiamondsEntities()
            : base("name=JAwelsAndDiamondsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Jewel> Jewels { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<TransactionDetail> TransactionDetails { get; set; }
        public virtual DbSet<TransactionHeader> TransactionHeaders { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<vw_CartDetails> vw_CartDetails { get; set; }
        public virtual DbSet<vw_JewelDetails> vw_JewelDetails { get; set; }
        public virtual DbSet<vw_TransactionDetails> vw_TransactionDetails { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_CheckoutCart(Nullable<int> userId, Nullable<int> paymentMethodId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var paymentMethodIdParameter = paymentMethodId.HasValue ?
                new ObjectParameter("PaymentMethodId", paymentMethodId) :
                new ObjectParameter("PaymentMethodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CheckoutCart", userIdParameter, paymentMethodIdParameter);
        }
    
        public virtual ObjectResult<sp_GetSuccessfulTransactions_Result> sp_GetSuccessfulTransactions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSuccessfulTransactions_Result>("sp_GetSuccessfulTransactions");
        }
    
        public virtual ObjectResult<sp_GetUnfinishedOrders_Result> sp_GetUnfinishedOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUnfinishedOrders_Result>("sp_GetUnfinishedOrders");
        }
    
        public virtual ObjectResult<sp_GetUserCart_Result> sp_GetUserCart(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserCart_Result>("sp_GetUserCart", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_UpdateTransactionStatus(Nullable<int> transactionId, string newStatus)
        {
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(int));
    
            var newStatusParameter = newStatus != null ?
                new ObjectParameter("NewStatus", newStatus) :
                new ObjectParameter("NewStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_UpdateTransactionStatus", transactionIdParameter, newStatusParameter);
        }
    }
}
